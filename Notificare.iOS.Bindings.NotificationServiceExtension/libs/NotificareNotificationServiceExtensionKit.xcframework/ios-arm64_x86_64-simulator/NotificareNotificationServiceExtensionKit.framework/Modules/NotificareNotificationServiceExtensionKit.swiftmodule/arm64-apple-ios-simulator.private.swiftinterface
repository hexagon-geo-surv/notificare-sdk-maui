// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
// swift-module-flags: -target arm64-apple-ios13.0-simulator -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -enable-bare-slash-regex -module-name NotificareNotificationServiceExtensionKit
import CoreGraphics
import Foundation
import MobileCoreServices
@_exported import NotificareNotificationServiceExtensionKit
import Swift
import UserNotifications
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_hasMissingDesignatedInitializers public class NotificareNotificationServiceExtension {
  public static func handleNotificationRequest(_ request: UserNotifications.UNNotificationRequest, _ completion: @escaping (Swift.Result<UserNotifications.UNNotificationContent, any Swift.Error>) -> Swift.Void)
  #if compiler(>=5.3) && $AsyncAwait
  public static func handleNotificationRequest(_ request: UserNotifications.UNNotificationRequest) async throws -> UserNotifications.UNNotificationContent
  #endif
  public enum Error : Swift.Error {
    case invalidUrl
    case downloadFailed
    public static func == (a: NotificareNotificationServiceExtensionKit.NotificareNotificationServiceExtension.Error, b: NotificareNotificationServiceExtensionKit.NotificareNotificationServiceExtension.Error) -> Swift.Bool
    public func hash(into hasher: inout Swift.Hasher)
    public var hashValue: Swift.Int {
      get
    }
  }
  @objc deinit
}
extension NotificareNotificationServiceExtensionKit.NotificareNotificationServiceExtension.Error : Swift.Equatable {}
extension NotificareNotificationServiceExtensionKit.NotificareNotificationServiceExtension.Error : Swift.Hashable {}
